@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Web.Common
@using water.ViewModels
@model MeterReadingsViewModel

@{
    ViewData["Title"] = "Показания";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var paginationOptions = new PagedListRenderOptions()
    {
        PageClasses = new string[] { "page-link" },
        LiElementClasses = new[] { "page-item" },
        UlElementClasses = new[] { "pagination", "justify-content-center" },
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5
    };
}

<h1>@ViewData["Title"]</h1>

<form asp-action="@nameof(water.Controllers.MetersController.Readings)" method="get">
    <div class="mb-3">
        <label asp-for="Order" class="form-label"></label>
        <select class="form-control auto-submit" asp-for="Order" asp-items="Html.GetEnumSelectList<PaginationViewModel.OrderBy>()"></select>
    </div>
    <div class="mb-3">
        <label asp-for="PageSize" class="form-label"></label>
        <select class="form-control auto-submit" asp-for="PageSize" asp-items="Html.GetEnumSelectList<PageSize>()"></select>
    </div>
</form>

@Html.PagedListPager(Model.DateTimes, page => Url.Action(nameof(water.Controllers.MetersController.Readings),
    new { page, PageSize = (int)Model.PageSize, Order = (int)Model.Order }),
    paginationOptions)

@if (Model.DateTimes.Any())
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Vcc</th>
                    @foreach (var item in Model.Meters)
                    {
                        <th>
                            <a asp-action="Details" asp-route-id="@item.Id">@item.Number</a>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.DateTimes.Count; i++)
                {
                <tr>
                    <td>@Model.DateTimes[i]</td>
                    <td>@for (int j = 0; j < Model.Meters.Count; j++) { if (Model.Readings[i, j]?.Vcc != null) { @Model.Readings[i, j].Vcc; break; } }</td>
                    @for (int j = 0; j < Model.Meters.Count; j++)
                    {
                        <td>
                            @Model.Readings[i, j]?.Value
                            @if (i + 1 < Model.DateTimes.Count)
                            {
                                if (Model.Readings[i + 1, j] != null && Model.Readings[i, j] != null)
                                {
                                    <span title="разница">(@(Model.Readings[i, j].Value - Model.Readings[i + 1, j].Value))</span>
                                }
                            }
                        </td>
                    }
                </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="alert alert-info">No data.</div>
    }